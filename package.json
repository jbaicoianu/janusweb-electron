{
  "name": "janusweb-electron",
  "version": "1.0.30",
  "main": "janusweb-electron.js",
  "author": "James Baicoianu",
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "https://github.com/jbaicoianu/janusweb-electron"
  },
  "dependencies": {
    "electron-builder": "^22.10.5",
    "electron-localshortcut": "^1.1.1",
    "electron-packager": "^15.2.0"
  },
  "devDependencies": {
    "janusweb": "^1.5.28",
    "electron": "^12.0.2"
  },
  "keywords": [
    "elation",
    "three.js",
    "3d",
    "webgl",
    "webvr",
    "janusvr",
    "metaverse",
    "electron"
  ],
  "scripts": {
    "clean": "rm -rf ./dist",
    "clean:osx": "rm -rf ./dist/osx",
    "clean:win": "rm -rf ./dist/win",
    "clean:linux": "rm -rf ./dist/linux",
    "pack": "npm run clean && npm run pack:osx && npm run pack:win && npm run pack:linux",
    "pack:osx": "npm run clean:osx && electron-packager . JanusXR --out=dist/osx --platform=darwin --arch=x64 --icon=assets/osx/logo.icns --ignore=dist --ignore=assets --ignore=builder.json --ignore=bower.json --ignore=README.md --ignore=.gitignore",
    "pack:win": "npm run clean:win && electron-packager . JanusXR --out=dist/win --platform=win32 --arch=x64 --icon=janusweb/media/icons/janusxr.ico --ignore=dist --ignore=assets --ignore=builder.json --ignore=bower.json --ignore=README.md --ignore=.gitignore",
    "pack:linux": "npm run clean:linux && electron-packager . JanusXR --out=dist/linux --platform=linux --arch=x64 --ignore=dist --ignore=builder.json --ignore=bower.json --ignore=README.md --ignore=.gitignore",
    "build": "npm run build:osx && npm run build:win && npm run build:linux",
    "build:osx": "npm run pack:osx && electron-builder \"dist/osx/JanusXR-darwin-x64/JanusXR.app\" --platform=osx --out=\"dist/osx\" --config=builder.json",
    "build:win": "npm run pack:win && electron-builder \"dist/win/JanusXR-win32-x64\" --platform=win --out=\"dist/win\" --config=builder.json",
    "build:linux": "npm run pack:linux && electron-builder \"dist/linux/JanusXR-linux-x64\" --platform=linux --out=\"dist/linux\" --config=builder.json"
  }
}
